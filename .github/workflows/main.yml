name: Publish

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      CS2_SHARP: cs2sharp
      CSGO_BETTER_BOTS: csgo-better-bots
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - run: npm ci
      - run: >
          gh release download
          --repo ${{ github.repository_owner }}/${{ env.CSGO_BETTER_BOTS }}
          --pattern '*.zip'
      - run: >
          gh release download
          --repo ${{ github.repository_owner }}/${{ env.CS2_SHARP }}
          --pattern '*.zip'
      - run: unzip -qq ${{ env.CSGO_BETTER_BOTS }}-*.zip
      - run: unzip -qq ${{ env.CS2_SHARP }}-*.zip
      - run: cp -r ${{ env.CSGO_BETTER_BOTS }}/* config/csgo/
      - run: cp -r ${{ env.CS2_SHARP }}/* config/cs2/
      - run: echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV
      - run: mkdir $REPO_NAME && cp -r generated/* $REPO_NAME/ && cp -r config/* $REPO_NAME/
      - run: zip -rq $REPO_NAME-$(cat package.json | jq -r '.version').zip $REPO_NAME/
      - id: create_release
        run: gh release create $(cat package.json | jq -r '.version') --title "$(cat package.json | jq -r '.version')" --latest
      - if: success() && steps.create_release.outcome == 'success'
        run: gh release upload $(cat package.json | jq -r '.version') $REPO_NAME-*.zip --clobber
